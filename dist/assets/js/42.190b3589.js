(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{1595:function(e,s,a){"use strict";a.r(s);var n=a(6),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_5、多表查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、多表查询"}},[e._v("#")]),e._v(" 5、多表查询")]),e._v(" "),n("h2",{attrs:{id:"_1、多表关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、多表关系"}},[e._v("#")]),e._v(" 1、多表关系")]),e._v(" "),n("p",[e._v("项目开发中，在进行数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结\n构，由于业务之间相互关联，所以各个表结构之间也存在着各种联系，基本上分为三种：\n----一对多(多对一)\n----多对多\n----一对一")]),e._v(" "),n("h3",{attrs:{id:"_1-、一对多-多对一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-、一对多-多对一"}},[e._v("#")]),e._v(" 1）、一对多(多对一)")]),e._v(" "),n("p",[e._v("案例: 部门 与 员工的关系\n关系: 一个部门对应多个员工，一个员工对应一个部门\n实现: 在多的一方建立外键，指向一的一方的主键")]),e._v(" "),n("h3",{attrs:{id:"_2-、多对多"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-、多对多"}},[e._v("#")]),e._v(" 2）、多对多")]),e._v(" "),n("p",[e._v("案例: 学生 与 课程的关系\n关系: 一个学生可以选修多门课程，一门课程也可以供多个学生选择\n实现: 建立第三张中间表，中间表至少包含两个外键，分别关联两方主键")]),e._v(" "),n("p",[n("img",{attrs:{src:a(969),alt:"1"}})]),e._v(" "),n("p",[e._v("对应的SQL脚本:")]),e._v(" "),n("div",{staticClass:"language-MYSQL line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("create table student(\nid int auto_increment primary key comment '主键ID',\nname varchar(10) comment '姓名',\nno varchar(10) comment '学号'\n) comment '学生表';\ninsert into student values (null, '黛绮丝', '2000100101'),(null, '谢逊',\n'2000100102'),(null, '殷天正', '2000100103'),(null, '韦一笑', '2000100104');\ncreate table course(\nid int auto_increment primary key comment '主键ID',\nname varchar(10) comment '课程名称'\n) comment '课程表';\ninsert into course values (null, 'Java'), (null, 'PHP'), (null , 'MySQL') ,\n(null, 'Hadoop');\ncreate table student_course(\nid int auto_increment comment '主键' primary key,\nstudentid int not null comment '学生ID',\ncourseid int not null comment '课程ID',\nconstraint fk_courseid foreign key (courseid) references course (id),\nconstraint fk_studentid foreign key (studentid) references student (id)\n)comment '学生课程中间表';\ninsert into student_course values (null,1,1),(null,1,2),(null,1,3),(null,2,2),\n(null,2,3),(null,3,4);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br")])]),n("h3",{attrs:{id:"_3-、一对一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-、一对一"}},[e._v("#")]),e._v(" 3）、一对一")]),e._v(" "),n("p",[e._v("案例: 用户 与 用户详情的关系\n关系: 一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其他详情字段放在另\n一张表中，以提升操作效率\n实现: 在任意一方加入外键，关联另外一方的主键，并且设置外键为唯一的(UNIQUE)")]),e._v(" "),n("p",[n("img",{attrs:{src:a(970),alt:"1"}})]),e._v(" "),n("p",[e._v("对应的SQL脚本:")]),e._v(" "),n("div",{staticClass:"language-MYSQL line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("create table tb_user(\nid int auto_increment primary key comment '主键ID',\nname varchar(10) comment '姓名',\nage int comment '年龄',\ngender char(1) comment '1: 男 , 2: 女',\nphone char(11) comment '手机号'\n) comment '用户基本信息表';\ncreate table tb_user_edu(\nid int auto_increment primary key comment '主键ID',\ndegree varchar(20) comment '学历',\nmajor varchar(50) comment '专业',\nprimaryschool varchar(50) comment '小学',\nmiddleschool varchar(50) comment '中学',\nuniversity varchar(50) comment '大学',\nuserid int unique comment '用户ID',\nconstraint fk_userid foreign key (userid) references tb_user(id)\n) comment '用户教育信息表';\ninsert into tb_user(id, name, age, gender, phone) values\n(null,'黄渤',45,'1','18800001111'),\n(null,'冰冰',35,'2','18800002222'),\n(null,'码云',55,'1','18800008888'),\n(null,'李彦宏',50,'1','18800009999');\ninsert into tb_user_edu(id, degree, major, primaryschool, middleschool,\nuniversity, userid) values\n(null,'本科','舞蹈','静安区第一小学','静安区第一中学','北京舞蹈学院',1),\n(null,'硕士','表演','朝阳区第一小学','朝阳区第一中学','北京电影学院',2),\n(null,'本科','英语','杭州市第一小学','杭州市第一中学','杭州师范大学',3),\n(null,'本科','应用数学','阳泉第一小学','阳泉区第一中学','清华大学',4);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br")])]),n("h2",{attrs:{id:"_2、多表查询概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、多表查询概述"}},[e._v("#")]),e._v(" 2、多表查询概述")]),e._v(" "),n("h3",{attrs:{id:"_1-数据准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据准备"}},[e._v("#")]),e._v(" 1.数据准备")]),e._v(" "),n("p",[e._v("1). 删除之前 emp, dept表的测试数据\n2). 执行如下脚本，创建emp表与dept表并插入测试数据")]),e._v(" "),n("div",{staticClass:"language-mysql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("-- 创建dept表，并插入数据\ncreate table dept(\nid int auto_increment comment 'ID' primary key,\nname varchar(50) not null comment '部门名称'\n)comment '部门表';\nINSERT INTO dept (id, name) VALUES (1, '研发部'), (2, '市场部'),(3, '财务部'), (4,\n'销售部'), (5, '总经办'), (6, '人事部');\n-- 创建emp表，并插入数据\ncreate table emp(\nid int auto_increment comment 'ID' primary key,\nname varchar(50) not null comment '姓名',\nage int comment '年龄',\njob varchar(20) comment '职位',\nsalary int comment '薪资',\nentrydate date comment '入职时间',\nmanagerid int comment '直属领导ID',\ndept_id int comment '部门ID'\n)comment '员工表';\n-- 添加外键\nalter table emp add constraint fk_emp_dept_id foreign key (dept_id) references\ndept(id);\nINSERT INTO emp (id, name, age, job,salary, entrydate, managerid, dept_id)\nVALUES\n(1, '金庸', 66, '总裁',20000, '2000-01-01', null,5),\n(2, '张无忌', 20, '项目经理',12500, '2005-12-05', 1,1),\n(3, '杨逍', 33, '开发', 8400,'2000-11-03', 2,1),\n(4, '韦一笑', 48, '开发',11000, '2002-02-05', 2,1),\n(5, '常遇春', 43, '开发',10500, '2004-09-07', 3,1),\n(6, '小昭', 19, '程序员鼓励师',6600, '2004-10-12', 2,1),\n(7, '灭绝', 60, '财务总监',8500, '2002-09-12', 1,3),\n(8, '周芷若', 19, '会计',48000, '2006-06-02', 7,3),\n(9, '丁敏君', 23, '出纳',5250, '2009-05-13', 7,3),\n(10, '赵敏', 20, '市场部总监',12500, '2004-10-12', 1,2),\n(11, '鹿杖客', 56, '职员',3750, '2006-10-03', 10,2),\n(12, '鹤笔翁', 19, '职员',3750, '2007-05-09', 10,2),\n(13, '方东白', 19, '职员',5500, '2009-02-12', 10,2),\n(14, '张三丰', 88, '销售总监',14000, '2004-10-12', 1,4),\n(15, '俞莲舟', 38, '销售',4600, '2004-10-12', 14,4),\n(16, '宋远桥', 40, '销售',4600, '2004-10-12', 14,4),\n(17, '陈友谅', 42, null,2000, '2011-10-12', 1,null);\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br"),n("span",{staticClass:"line-number"},[e._v("36")]),n("br"),n("span",{staticClass:"line-number"},[e._v("37")]),n("br"),n("span",{staticClass:"line-number"},[e._v("38")]),n("br"),n("span",{staticClass:"line-number"},[e._v("39")]),n("br"),n("span",{staticClass:"line-number"},[e._v("40")]),n("br")])]),n("p",[e._v("dept表共6条记录，emp表共17条记录。")]),e._v(" "),n("h3",{attrs:{id:"_2-概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-概述"}},[e._v("#")]),e._v(" 2.概述")]),e._v(" "),n("p",[e._v("多表查询就是指从多张表中查询数据")]),e._v(" "),n("p",[e._v("原来查询单表数据，执行的SQL形式为：select * from emp;")]),e._v(" "),n("p",[e._v("那么我们要执行多表查询，就只需要使用逗号分隔多张表即可，如： select * from emp , dept")]),e._v(" "),n("p",[e._v("此时,我们看到查询结果中包含了大量的结果集，总共102条记录，而这其实就是员工表emp所有的记录")]),e._v(" "),n("p",[e._v("(17) 与 部门表dept所有记录(6) 的所有组合情况，这种现象称之为笛卡尔积。接下来，就来简单介绍下笛卡尔积。")]),e._v(" "),n("p",[e._v("笛卡尔积: 笛卡尔乘积是指在数学中，两个集合A集合 和 B集合的所有组合情况。")]),e._v(" "),n("p",[e._v("而在多表查询中，我们是需要消除无效的笛卡尔积的，只保留两张表关联部分的数据。")]),e._v(" "),n("p",[e._v("在SQL语句中，如何来去除无效的笛卡尔积呢？ 我们可以给多表查询加上连接查询的条件即可。")]),e._v(" "),n("p",[e._v("select * from emp , dept where emp.dept_id = dept.id;")]),e._v(" "),n("p",[e._v("而由于id为17的员工，没有dept_id字段值，所以在多表查询时，根据连接查询的条件并没有查询到。")]),e._v(" "),n("h3",{attrs:{id:"_3-分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-分类"}},[e._v("#")]),e._v(" 3.分类")]),e._v(" "),n("p",[e._v("连接查询\n​\t内连接：相当于查询A、B交集部分数据\n​\t外连接：\n​\t左外连接：查询左表所有数据，以及两张表交集部分数据\n​\t右外连接：查询右表所有数据，以及两张表交集部分数据\n​\t自连接：当前表与自身的连接查询，自连接必须使用表别名\n子查询")]),e._v(" "),n("p",[n("img",{attrs:{src:a(532),alt:"1"}})]),e._v(" "),n("h2",{attrs:{id:"_3、内连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、内连接"}},[e._v("#")]),e._v(" 3、内连接")]),e._v(" "),n("p",[e._v("内连接查询的是两张表交集部分的数据。(也就是绿色部分的数据)")]),e._v(" "),n("p",[n("img",{attrs:{src:a(532),alt:"1"}})]),e._v(" "),n("p",[e._v("内连接的语法分为两种: 隐式内连接、显式内连接。先来学习一下具体的语法结构。")]),e._v(" "),n("h3",{attrs:{id:"_1-隐式内连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-隐式内连接"}},[e._v("#")]),e._v(" 1). 隐式内连接")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表1 , 表2 WHERE 条件 ... ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"_2-显式内连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-显式内连接"}},[e._v("#")]),e._v(" 2). 显式内连接")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表1 [ INNER ] JOIN 表2 ON 连接条件 ... ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("案例:")]),e._v(" "),n("p",[e._v("A. 查询每一个员工的姓名 , 及关联的部门的名称 (隐式内连接实现)\n表结构: emp , dept\n连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select emp.name , dept.name from emp , dept where emp.dept_id = dept.id ;\n-- 为每一张表起别名,简化SQL编写\nselect e.name,d.name from emp e , dept d where e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("B. 查询每一个员工的姓名 , 及关联的部门的名称 (显式内连接实现) --- INNER JOIN ...\nON ...\n表结构: emp , dept\n连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.name, d.name from emp e inner join dept d on e.dept_id = d.id;\n-- 为每一张表起别名,简化SQL编写\nselect e.name, d.name from emp e join dept d on e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("h3",{attrs:{id:"表的别名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#表的别名"}},[e._v("#")]),e._v(" 表的别名:")]),e._v(" "),n("p",[e._v("①. tablea as 别名1 , tableb as 别名2 ;\n②. tablea 别名1 , tableb 别名2 ;")]),e._v(" "),n("p",[e._v("注意：")]),e._v(" "),n("p",[e._v("​\t一旦为表起了别名，就不能再使用表名来指定对应的字段了，此时只能够使用别名来指定字\n段。")]),e._v(" "),n("h2",{attrs:{id:"_4、外连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、外连接"}},[e._v("#")]),e._v(" 4、外连接")]),e._v(" "),n("p",[n("img",{attrs:{src:a(532),alt:"1"}})]),e._v(" "),n("p",[e._v("外连接分为两种，分别是：左外连接 和 右外连接。具体的语法结构为：")]),e._v(" "),n("h3",{attrs:{id:"_1-左外连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-左外连接"}},[e._v("#")]),e._v(" 1). 左外连接")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表1 LEFT [ OUTER ] JOIN 表2 ON 条件 ... ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("左外连接相当于查询表1(左表)的所有数据，当然也包含表1和表2交集部分的数据。")]),e._v(" "),n("h3",{attrs:{id:"_2-右外连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-右外连接"}},[e._v("#")]),e._v(" 2). 右外连接")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表1 RIGHT [ OUTER ] JOIN 表2 ON 条件 ... ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("右外连接相当于查询表2(右表)的所有数据，当然也包含表1和表2交集部分的数据。")]),e._v(" "),n("p",[e._v("案例:\nA. 查询emp表的所有数据, 和对应的部门信息\n由于需求中提到，要查询emp的所有数据，所以是不能内连接查询的，需要考虑使用外连接查询。\n表结构: emp, dept\n连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.*, d.name from emp e left outer join dept d on e.dept_id = d.id;\nselect e.*, d.name from emp e left join dept d on e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("B. 查询dept表的所有数据, 和对应的员工信息(右外连接)")]),e._v(" "),n("p",[e._v("由于需求中提到，要查询dept表的所有数据，所以是不能内连接查询的，需要考虑使用外连接查\n询。\n表结构: emp, dept\n连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select d.*, e.* from emp e right outer join dept d on e.dept_id = d.id;\nselect d.*, e.* from dept d left outer join emp e on e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("注意：\n左外连接和右外连接是可以相互替换的，只需要调整在连接查询时SQL中，表结构的先后顺\n序就可以了。而我们在日常开发使用时，更偏向于左外连接。")]),e._v(" "),n("h2",{attrs:{id:"_5、自连接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、自连接"}},[e._v("#")]),e._v(" 5、自连接")]),e._v(" "),n("h3",{attrs:{id:"_1-自连接查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-自连接查询"}},[e._v("#")]),e._v(" 1.自连接查询")]),e._v(" "),n("p",[e._v("自连接查询，顾名思义，就是自己连接自己，也就是把一张表连接查询多次。我们先来学习一下自连接\n的查询语法：")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表A 别名A JOIN 表A 别名B ON 条件 ... ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("而对于自连接查询，可以是内连接查询，也可以是外连接查询。")]),e._v(" "),n("p",[e._v("案例：\nA. 查询员工 及其 所属领导的名字\n表结构: emp")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select a.name , b.name from emp a , emp b where a.managerid = b.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("B. 查询所有员工 emp 及其领导的名字 emp , 如果员工没有领导, 也需要查询出来\n表结构: emp a , emp b")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select a.name '员工', b.name '领导' from emp a left join emp b on a.managerid =b.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("注意:\n在自连接查询中，必须要为表起别名，要不然我们不清楚所指定的条件、返回的字段，到底\n是哪一张表的字段。")]),e._v(" "),n("h3",{attrs:{id:"_2-联合查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-联合查询"}},[e._v("#")]),e._v(" 2.联合查询")]),e._v(" "),n("p",[e._v("对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT 字段列表 FROM 表A ...\nUNION [ ALL ]\nSELECT 字段列表 FROM 表B ....;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致。\nunion all 会将全部的数据直接合并在一起，union 会对合并之后的数据去重。")]),e._v(" "),n("p",[e._v("案例:\nA. 将薪资低于 5000 的员工 , 和 年龄大于 50 岁的员工全部查询出来.\n当前对于这个需求，我们可以直接使用多条件查询，使用逻辑运算符 or 连接即可。 那这里呢，我们\n也可以通过union/union all来联合查询.")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary < 5000\nunion all\nselect * from emp where age > 50;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("union all查询出来的结果，仅仅进行简单的合并，并未去重")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary < 5000\nunion\nselect * from emp where age > 50;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br")])]),n("p",[e._v("union 联合查询，会对查询出来的结果进行去重处理。")]),e._v(" "),n("p",[e._v("注意：\n如果多条查询语句查询出来的结果，字段数量不一致，在进行union/union all联合查询时，将会报\n错。")]),e._v(" "),n("h2",{attrs:{id:"_6、子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、子查询"}},[e._v("#")]),e._v(" 6、子查询")]),e._v(" "),n("h3",{attrs:{id:"_1-概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[e._v("#")]),e._v(" 1.概述")]),e._v(" "),n("h4",{attrs:{id:"_1-概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[e._v("#")]),e._v(" 1). 概念")]),e._v(" "),n("p",[e._v("SQL语句中嵌套SELECT语句，称为嵌套查询，又称子查询。")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("SELECT * FROM t1 WHERE column1 = ( SELECT column1 FROM t2 );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("子查询外部的语句可以是INSERT / UPDATE / DELETE / SELECT 的任何一个。")]),e._v(" "),n("h4",{attrs:{id:"_2-分类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-分类"}},[e._v("#")]),e._v(" 2). 分类")]),e._v(" "),n("p",[e._v("根据子查询结果不同，分为：\nA. 标量子查询（子查询结果为单个值）\nB. 列子查询(子查询结果为一列)\nC. 行子查询(子查询结果为一行)\nD. 表子查询(子查询结果为多行多列)")]),e._v(" "),n("p",[e._v("根据子查询位置，分为：\nA. WHERE之后\nB. FROM之后\nC. SELECT之后")]),e._v(" "),n("h3",{attrs:{id:"_2-标量子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-标量子查询"}},[e._v("#")]),e._v(" 2.标量子查询")]),e._v(" "),n("p",[e._v("子查询返回的结果是单个值（数字、字符串、日期等），最简单的形式，这种子查询称为标量子查询。\n常用的操作符：= <> > >= < <=")]),e._v(" "),n("p",[e._v('案例:\nA. 查询 "销售部" 的所有员工信息\n完成这个需求时，我们可以将需求分解为两步：')]),e._v(" "),n("p",[e._v('①. 查询 "销售部" 部门ID')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select id from dept where name = '销售部';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('②. 根据 "销售部" 部门ID, 查询员工信息')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where dept_id = (select id from dept where name = '销售部');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('B. 查询在 "方东白" 入职之后的员工信息\n完成这个需求时，我们可以将需求分解为两步：')]),e._v(" "),n("p",[e._v("①. 查询 方东白 的入职日期")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select entrydate from emp where name = '方东白';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 查询指定入职日期之后入职的员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where entrydate > (select entrydate from emp where name = '方东白');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("h3",{attrs:{id:"_3-列子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-列子查询"}},[e._v("#")]),e._v(" 3.列子查询")]),e._v(" "),n("p",[e._v("子查询返回的结果是一列（可以是多行），这种子查询称为列子查询。\n常用的操作符：IN 、NOT IN 、 ANY 、SOME 、 ALL")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("操作符")]),e._v(" "),n("th",[e._v("描述")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("IN")]),e._v(" "),n("td",[e._v("在指定的集合范围之内，多选一")])]),e._v(" "),n("tr",[n("td",[e._v("NOT IN")]),e._v(" "),n("td",[e._v("不在指定的集合范围之内")])]),e._v(" "),n("tr",[n("td",[e._v("ANY")]),e._v(" "),n("td",[e._v("子查询返回列表中，有任意一个满足即可")])]),e._v(" "),n("tr",[n("td",[e._v("SOME")]),e._v(" "),n("td",[e._v("与ANY等同，使用SOME的地方都可以使用ANY")])]),e._v(" "),n("tr",[n("td",[e._v("ALL")]),e._v(" "),n("td",[e._v("子查询返回列表的所有值都必须满足")])])])]),e._v(" "),n("p",[e._v('案例:\nA. 查询 "销售部" 和 "市场部" 的所有员工信息')]),e._v(" "),n("p",[e._v("分解为以下两步:")]),e._v(" "),n("p",[e._v('①. 查询 "销售部" 和 "市场部" 的部门ID')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select id from dept where name = '销售部' or name = '市场部';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 根据部门ID, 查询员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where dept_id in (select id from dept where name = '销售部' or name = '市场部');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("B. 查询比 财务部 所有人工资都高的员工信息")]),e._v(" "),n("p",[e._v("分解为以下两步:")]),e._v(" "),n("p",[e._v("①. 查询所有 财务部 人员工资")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select id from dept where name = '财务部';\nselect salary from emp where dept_id = (select id from dept where name = '财务部');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("②. 比 财务部 所有人工资都高的员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary > all ( select salary from emp where dept_id =\n(select id from dept where name = '财务部') );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("C. 查询比研发部其中任意一人工资高的员工信息")]),e._v(" "),n("p",[e._v("分解为以下两步:")]),e._v(" "),n("p",[e._v("①. 查询研发部所有人工资")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select salary from emp where dept_id = (select id from dept where name = '研发部');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 比研发部其中任意一人工资高的员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary > any ( select salary from emp where dept_id =\n(select id from dept where name = '研发部') );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h3",{attrs:{id:"_4-行子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-行子查询"}},[e._v("#")]),e._v(" 4.行子查询")]),e._v(" "),n("p",[e._v("子查询返回的结果是一行（可以是多列），这种子查询称为行子查询。\n常用的操作符：= 、<> 、IN 、NOT IN")]),e._v(" "),n("p",[e._v("案例:")]),e._v(" "),n("p",[e._v('A. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;')]),e._v(" "),n("p",[e._v("这个需求同样可以拆解为两步进行:")]),e._v(" "),n("p",[e._v('①. 查询 "张无忌" 的薪资及直属领导')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select salary, managerid from emp where name = '张无忌';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('②. 查询与 "张无忌" 的薪资及直属领导相同的员工信息 ;')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where (salary,managerid) = (select salary, managerid from emp\nwhere name = '张无忌');\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h3",{attrs:{id:"_5-表子查询"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-表子查询"}},[e._v("#")]),e._v(" 5.表子查询")]),e._v(" "),n("p",[e._v("子查询返回的结果是多行多列，这种子查询称为表子查询。\n常用的操作符：IN")]),e._v(" "),n("p",[e._v("案例:")]),e._v(" "),n("p",[e._v('A. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息')]),e._v(" "),n("p",[e._v("分解为两步执行:")]),e._v(" "),n("p",[e._v('①. 查询 "鹿杖客" , "宋远桥" 的职位和薪资')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" select job, salary from emp where name = '鹿杖客' or name = '宋远桥';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('②. 查询与 "鹿杖客" , "宋远桥" 的职位和薪资相同的员工信息')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where (job,salary) in ( select job, salary from emp where name =\n'鹿杖客' or name = '宋远桥' );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v('B. 查询入职日期是 "2006-01-01" 之后的员工信息 , 及其部门信息')]),e._v(" "),n("p",[e._v("分解为两步执行:")]),e._v(" "),n("p",[e._v('①. 入职日期是 "2006-01-01" 之后的员工信息')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" select * from emp where entrydate > '2006-01-01';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 查询这部分员工, 对应的部门信息;")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.*, d.* from (select * from emp where entrydate > '2006-01-01') e left\njoin dept d on e.dept_id = d.id ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("h2",{attrs:{id:"_7、多表查询案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、多表查询案例"}},[e._v("#")]),e._v(" 7、多表查询案例")]),e._v(" "),n("p",[e._v("数据环境准备:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("create table salgrade(\ngrade int,\nlosal int,\nhisal int\n) comment '薪资等级表';\ninsert into salgrade values (1,0,3000);\ninsert into salgrade values (2,3001,5000);\ninsert into salgrade values (3,5001,8000);\ninsert into salgrade values (4,8001,10000);\ninsert into salgrade values (5,10001,15000);\ninsert into salgrade values (6,15001,20000);\ninsert into salgrade values (7,20001,25000);\ninsert into salgrade values (8,25001,30000);\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br")])]),n("p",[e._v("在这个案例中，我们主要运用上面所讲解的多表查询的语法，完成以下的12个需求即可，而这里主要涉\n及到的表就三张：emp员工表、dept部门表、salgrade薪资等级表 。")]),e._v(" "),n("p",[e._v("1). 查询员工的姓名、年龄、职位、部门信息 （隐式内连接）")]),e._v(" "),n("p",[e._v("表: emp , dept")]),e._v(" "),n("p",[e._v("连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.name , e.age , e.job , d.name from emp e , dept d where e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("2). 查询年龄小于30岁的员工的姓名、年龄、职位、部门信息（显式内连接）")]),e._v(" "),n("p",[e._v("表: emp , dept")]),e._v(" "),n("p",[e._v("连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.name , e.age , e.job , d.name from emp e inner join dept d on e.dept_id =\nd.id where e.age < 30;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("3). 查询拥有员工的部门ID、部门名称")]),e._v(" "),n("p",[e._v("表: emp , dept")]),e._v(" "),n("p",[e._v("连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(" select distinct d.id , d.name from emp e , dept d where e.dept_id = d.id;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("4). 查询所有年龄大于40岁的员工, 及其归属的部门名称; 如果员工没有分配部门, 也需要展示出来(外连接)")]),e._v(" "),n("p",[e._v("表: emp , dept")]),e._v(" "),n("p",[e._v("连接条件: emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.*, d.name from emp e left join dept d on e.dept_id = d.id where e.age >40 ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("5). 查询所有员工的工资等级")]),e._v(" "),n("p",[e._v("表: emp , salgrade")]),e._v(" "),n("p",[e._v("连接条件 : emp.salary >= salgrade.losal and emp.salary <= salgrade.hisal")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("-- 方式一\nselect e.* , s.grade , s.losal, s.hisal from emp e , salgrade s where e.salary >=\ns.losal and e.salary <= s.hisal;\n-- 方式二\nselect e.* , s.grade , s.losal, s.hisal from emp e , salgrade s where e.salary\nbetween s.losal and s.hisal;\n\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])]),n("p",[e._v('6). 查询 "研发部" 所有员工的信息及 工资等级')]),e._v(" "),n("p",[e._v("表: emp , salgrade , dept")]),e._v(" "),n("p",[e._v("连接条件 : emp.salary between salgrade.losal and salgrade.hisal ,emp.dept_id = dept.id")]),e._v(" "),n("p",[e._v("查询条件 : dept.name = '研发部'")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select e.* , s.grade from emp e , dept d , salgrade s where e.dept_id = d.id and (\ne.salary between s.losal and s.hisal ) and d.name = '研发部';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v('7). 查询 "研发部" 员工的平均工资')]),e._v(" "),n("p",[e._v("表: emp , dept")]),e._v(" "),n("p",[e._v("连接条件 : emp.dept_id = dept.id")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select avg(e.salary) from emp e, dept d where e.dept_id = d.id and d.name = '研发部';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v('8). 查询工资比 "灭绝" 高的员工信息。')]),e._v(" "),n("p",[e._v('①. 查询 "灭绝" 的薪资')]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select salary from emp where name = '灭绝';\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 查询比她工资高的员工数据")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary > ( select salary from emp where name = '灭绝' );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("9). 查询比平均薪资高的员工信息")]),e._v(" "),n("p",[e._v("①. 查询员工的平均薪资")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select avg(salary) from emp;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("②. 查询比平均薪资高的员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp where salary > ( select avg(salary) from emp );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("10). 查询低于本部门平均工资的员工信息")]),e._v(" "),n("p",[e._v("①. 查询指定部门平均薪资")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select avg(e1.salary) from emp e1 where e1.dept_id = 1;\nselect avg(e1.salary) from emp e1 where e1.dept_id = 2;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("②. 查询低于本部门平均工资的员工信息")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select * from emp e2 where e2.salary < ( select avg(e1.salary) from emp e1 where\ne1.dept_id = e2.dept_id );\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("11). 查询所有的部门信息, 并统计部门的员工人数")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select d.id, d.name , ( select count(*) from emp e where e.dept_id = d.id ) '人数'\nfrom dept d;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])]),n("p",[e._v("12). 查询所有学生的选课情况, 展示出学生名称, 学号, 课程名称")]),e._v(" "),n("p",[e._v("表: student , course , student_course")]),e._v(" "),n("p",[e._v("连接条件: student.id = student_course.studentid , course.id =student_course.courseid")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("select s.name , s.no , c.name from student s , student_course sc , course c where\ns.id = sc.studentid and sc.courseid = c.id ;\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports},532:function(e,s,a){e.exports=a.p+"assets/img/3.25cef232.png"},969:function(e,s,a){e.exports=a.p+"assets/img/1.9b523969.png"},970:function(e,s,a){e.exports=a.p+"assets/img/2.98366004.png"}}]);