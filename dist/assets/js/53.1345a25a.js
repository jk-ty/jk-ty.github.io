(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{1596:function(a,s,e){"use strict";e.r(s);var t=e(6),n=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"_6、事物"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、事物"}},[a._v("#")]),a._v(" 6、事物")]),a._v(" "),e("h2",{attrs:{id:"_1、事务简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、事务简介"}},[a._v("#")]),a._v(" 1、事务简介")]),a._v(" "),e("p",[a._v("事务 是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系\n统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败。")]),a._v(" "),e("p",[a._v("就比如: 张三给李四转账1000块钱，张三银行账户的钱减少1000，而李四银行账户的钱要增加\n1000。 这一组操作就必须在一个事务的范围内，要么都成功，要么都失败。")]),a._v(" "),e("p",[a._v("正常情况: 转账这个操作, 需要分为以下这么三步来完成 , 三步完成之后, 张三减少1000, 而李四\n增加1000, 转账成功 :")]),a._v(" "),e("p",[a._v("异常情况: 转账这个操作, 也是分为以下这么三步来完成 , 在执行第三步是报错了, 这样就导致张\n三减少1000块钱, 而李四的金额没变, 这样就造成了数据的不一致, 就出现问题了。")]),a._v(" "),e("p",[a._v("为了解决上述的问题，就需要通过数据的事务来完成，我们只需要在业务逻辑执行之前开启事务，执行\n完毕后提交事务。如果执行过程中报错，则回滚事务，把数据恢复到事务开始之前的状态。")]),a._v(" "),e("p",[a._v("注意： 默认MySQL的事务是自动提交的，也就是说，当执行完一条DML语句时，MySQL会立即隐\n式的提交事务。")]),a._v(" "),e("h2",{attrs:{id:"_2、-事务操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、-事务操作"}},[a._v("#")]),a._v(" 2、 事务操作")]),a._v(" "),e("p",[a._v("数据准备：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("drop table if exists account;\ncreate table account(\nid int primary key AUTO_INCREMENT comment 'ID',\nname varchar(10) comment '姓名',\nmoney double(10,2) comment '余额'\n) comment '账户表';\ninsert into account(name, money) VALUES ('张三',2000), ('李四',2000);\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("h3",{attrs:{id:"_1-未控制事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-未控制事务"}},[a._v("#")]),a._v(" 1.未控制事务")]),a._v(" "),e("h4",{attrs:{id:"_1-测试正常情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-测试正常情况"}},[a._v("#")]),a._v(" 1). 测试正常情况")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h4",{attrs:{id:"_2-测试异常情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-测试异常情况"}},[a._v("#")]),a._v(" 2). 测试异常情况")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n出错了....\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br")])]),e("p",[a._v("我们把数据都恢复到2000， 然后再次一次性执行上述的SQL语句(出错了.... 这句话不符合SQL语\n法,执行就会报错)，检查最终的数据情况, 发现数据在操作前后不一致了。")]),a._v(" "),e("h3",{attrs:{id:"_2-控制事务一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-控制事务一"}},[a._v("#")]),a._v(" 2.控制事务一")]),a._v(" "),e("p",[a._v("1). 查看/设置事务提交方式")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("SELECT @@autocommit ;\nSET @@autocommit = 0 ;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("2). 提交事务")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" COMMIT;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("3). 回滚事务")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ROLLBACK;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("注意：上述的这种方式，我们是修改了事务的自动提交行为, 把默认的自动提交修改为了手动提\n交, 此时我们执行的DML语句都不会提交, 需要手动的执行commit进行提交。")]),a._v(" "),e("p",[a._v("3.控制事务二")]),a._v(" "),e("p",[a._v("1). 开启事务")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("START TRANSACTION 或 BEGIN ;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("2). 提交事务")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("COMMIT;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("3). 回滚事务")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("ROLLBACK;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("转账案例：")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("-- 开启事务\nstart transaction\n-- 1. 查询张三余额\nselect * from account where name = '张三';\n-- 2. 张三的余额减少1000\nupdate account set money = money - 1000 where name = '张三';\n-- 3. 李四的余额增加1000\nupdate account set money = money + 1000 where name = '李四';\n-- 如果正常执行完毕, 则提交事务\ncommit;\n-- 如果执行过程中报错, 则回滚事务\n-- rollback;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br")])]),e("h2",{attrs:{id:"_3、务四大特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、务四大特性"}},[a._v("#")]),a._v(" 3、务四大特性")]),a._v(" "),e("p",[a._v("原子性（Atomicity）：事务是不可分割的最小操作单元，要么全部成功，要么全部失败。\n一致性（Consistency）：事务完成时，必须使所有的数据都保持一致状态。\n隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立\n环境下运行。\n持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。\n上述就是事务的四大特性，简称ACID。")]),a._v(" "),e("h2",{attrs:{id:"_4、并发事务问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、并发事务问题"}},[a._v("#")]),a._v(" 4、并发事务问题")]),a._v(" "),e("p",[a._v("1). 赃读：一个事务读到另外一个事务还没有提交的数据。")]),a._v(" "),e("p",[a._v("2). 不可重复读：一个事务先后读取同一条记录，但两次读取的数据不同，称之为不可重复读。")]),a._v(" "),e("p",[a._v('3). 幻读：一个事务按照条件查询数据时，没有对应的数据行，但是在插入数据时，又发现这行数据\n已经存在，好像出现了 "幻影"。')]),a._v(" "),e("h2",{attrs:{id:"_5、事务隔离级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、事务隔离级别"}},[a._v("#")]),a._v(" 5、事务隔离级别")]),a._v(" "),e("p",[a._v("为了解决并发事务所引发的问题，在数据库中引入了事务隔离级别。主要有以下几种：")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("隔离级别")]),a._v(" "),e("th",[a._v("脏读 不可")]),a._v(" "),e("th",[a._v("重复读")]),a._v(" "),e("th",[a._v("幻读")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("Read uncommitted")]),a._v(" "),e("td",[a._v("√")]),a._v(" "),e("td",[a._v("√")]),a._v(" "),e("td",[a._v("√")])]),a._v(" "),e("tr",[e("td",[a._v("Read committed")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("√")]),a._v(" "),e("td",[a._v("√")])]),a._v(" "),e("tr",[e("td",[a._v("Repeatable Read(默认)")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("√")])]),a._v(" "),e("tr",[e("td",[a._v("Serializable")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("×")])])])]),a._v(" "),e("p",[a._v("1). 查看事务隔离级别")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v(" SELECT @@TRANSACTION_ISOLATION;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("2). 设置事务隔离级别")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("SET [ SESSION | GLOBAL ] TRANSACTION ISOLATION LEVEL { READ UNCOMMITTED |\nREAD COMMITTED | REPEATABLE READ | SERIALIZABLE }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("p",[a._v("注意：事务隔离级别越高，数据越安全，但是性能越低。")])])}),[],!1,null,null,null);s.default=n.exports}}]);